{"mode":"Text","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor MotorLeft = motor(PORT11, ratio18_1, false);\n\nmotor MotorRight = motor(PORT20, ratio18_1, false);\n\ncontroller Controller1 = controller(primary);\nmotor MotorPickUp = motor(PORT17, ratio18_1, false);\n\nmotor MotorExtend1 = motor(PORT18, ratio18_1, false);\n\nmotor MotorExtend2 = motor(PORT19, ratio18_1, false);\n\n/*vex-vision-config:begin*/\nvision::signature VisionSensor__BLUEROLLER = vision::signature (1, -3099, -1213, -2156,7957, 13797, 10877,1.7, 0);\nvision::signature VisionSensor__REDROLLER = vision::signature (2, 10417, 12763, 11590,-1699, -991, -1345,2.5, 0);\nvision VisionSensor = vision (PORT14, 50, VisionSensor__BLUEROLLER, VisionSensor__REDROLLER);\n/*vex-vision-config:end*/\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n#pragma endregion VEXcode Generated Robot Configuration\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\n\nvoid rotateLeft(){\n  MotorLeft.spin(reverse);\n  MotorRight.spin(reverse);\n}\n\nvoid rotateRight(){\n  MotorLeft.spin(forward);\n  MotorRight.spin(forward);\n}\n\nvoid moveForward(){\n  MotorLeft.spin(reverse);\n  MotorRight.spin(forward);\n}\n\nvoid moveBackward(){\n  MotorLeft.spin(forward);\n  MotorRight.spin(reverse);\n}\n\nvoid motorsStop(){\n  MotorLeft.stop();\n  MotorRight.stop();\n}\n\nvoid extend(){\n  MotorExtend1.spin(forward);\n  MotorExtend2.spin(reverse);\n  wait(1, seconds);\n  MotorExtend2.stop();\n  MotorExtend1.stop();\n}\n\nvoid unExtend(){\n  MotorExtend1.spin(reverse);\n  MotorExtend2.spin(forward);\n  wait(1, seconds);\n  MotorExtend1.stop();\n  MotorExtend2.stop();\n}\n\nvoid autonomousQ1(){\n  moveForward();\n  wait(100, msec);\n  rotateRight();\n  wait(190, msec);\n  moveForward();\n  wait(4000, msec);\n  rotateRight();\n  wait(190, msec);\n  moveForward();\n  wait(100, msec);\n  rotateRight();\n  wait(190, msec);\n  moveForward();\n  wait(1500, msec);\n  motorsStop();\n}\n\nvoid autonomousRedNorth(){\n  moveForward();\n  wait(950, msec);\n  rotateRight();\n  wait(450, msec);\n  rotateRight();\n  wait(250, msec);\n  moveForward();\n  wait(1700, msec);\n  rotateRight();\n  wait(190, msec);\n  moveForward();\n  wait(700, msec);\n  //motorsStop();\n  MotorPickUp.spin(forward);\n  wait(350, msec);\n  motorsStop();\n  /*while(true){\n    VisionSensor.takeSnapshot(VisionSensor__BLUEROLLER);\n    if(VisionSensor.largestObject.exists){\n      wait(50, msec);\n      MotorPickUp.stop();\n    }\n  }*/\n}\n\nvoid autonomousBlueSouth(){\n  moveForward();\n  wait(950, msec);\n  rotateRight();\n  wait(450, msec);\n  rotateRight();\n  wait(250, msec);\n  moveForward();\n  wait(1900, msec);\n  rotateRight();\n  wait(190, msec);\n  moveForward();\n  wait(700, msec);\n  //motorsStop();\n  MotorPickUp.spin(forward);\n  wait(450, msec);\n  motorsStop();\n  while(true){\n    VisionSensor.takeSnapshot(VisionSensor__REDROLLER);\n    if(VisionSensor.largestObject.exists){\n      wait(50, msec);\n      MotorPickUp.stop();\n    }\n  }\n  MotorPickUp.setVelocity(100, percent);\n}\n\nvoid pickUpForward(){\n  MotorPickUp.spin(forward);\n  Brain.Screen.print(\"VEXcode\");\n}\n\nvoid pickUpBackward(){\n  MotorPickUp.spin(reverse);\n}\n\nvoid pickUpStop(){\n  MotorPickUp.stop();\n}\n\n\nint whenStarted1() {\n  Controller1.ButtonR1.pressed(extend);\n  Controller1.ButtonR2.pressed(unExtend);\n\n  /*Controller1.ButtonL1.pressed(pickUpForward);\n  Controller1.ButtonL2.pressed(pickUpBackward);\n\n  Controller1.ButtonL1.released(pickUpStop);\n  Controller1.ButtonL2.released(pickUpStop);\n  */\n\n  Controller1.ButtonUp.pressed(moveForward);\n  Controller1.ButtonDown.pressed(moveBackward);\n  Controller1.ButtonY.pressed(rotateLeft);\n  Controller1.ButtonA.pressed(rotateRight);\n\n  Controller1.ButtonUp.released(motorsStop);\n  Controller1.ButtonDown.released(motorsStop);\n  Controller1.ButtonY.released(motorsStop);\n  Controller1.ButtonA.released(motorsStop);\n\n\n  MotorLeft.setVelocity(50, percent);\n  MotorRight.setVelocity(50, percent);\n  MotorPickUp.setVelocity(50, percent);\n  MotorExtend1.setVelocity(30, percent);\n  MotorExtend2.setVelocity(30, percent);\n\n\n\n  //autonomousBlueSouth();\n  autonomousRedNorth();\n  while(true){\n    if(Controller1.ButtonL2.pressing()){\n      MotorPickUp.spin(forward);\n    }else{\n      MotorPickUp.stop();\n    }\n    this_thread::sleep_for(25);\n  }\n  \n}\n\n\nint main() {\n\n  printf(\"\\033[30m\");\n  Brain.Screen.print(\"VEXcode\");\n\n\n  // wait for rotation sensor to fully initialize\n  wait(100, msec);\n\n  whenStarted1();\n}\n","textLanguage":"cpp","rconfig":[{"port":[11],"name":"MotorLeft","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[20],"name":"MotorRight","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[17],"name":"MotorPickUp","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[18],"name":"MotorExtend1","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[19],"name":"MotorExtend2","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[14],"name":"VisionSensor","customName":true,"deviceType":"Vision","deviceClass":"vision","setting":{"config":"{\"config\":{\"brightness\":50,\"signatures\":[{\"name\":\"BLUEROLLER\",\"parameters\":{\"uMin\":-3099,\"uMax\":-1213,\"uMean\":-2156,\"vMin\":7957,\"vMax\":13797,\"vMean\":10877,\"rgb\":2173528.4707850134,\"type\":0,\"name\":\"BLUEROLLER\"},\"range\":1.7},{\"name\":\"REDROLLER\",\"parameters\":{\"uMin\":10417,\"uMax\":12763,\"uMean\":11590,\"vMin\":-1699,\"vMax\":-991,\"vMean\":-1345,\"rgb\":8073770.38848194,\"type\":0,\"name\":\"REDROLLER\"},\"range\":2.5},{\"name\":\"SIG_3\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_3\"},\"range\":2.5},{\"name\":\"SIG_4\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_4\"},\"range\":2.5},{\"name\":\"SIG_5\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_5\"},\"range\":2.5},{\"name\":\"SIG_6\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_6\"},\"range\":2.5},{\"name\":\"SIG_7\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_7\"},\"range\":2.5}],\"codes\":[]}}","isConfigured":"false"}}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.0","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","target":"Physical"}