{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"110\"><next><block type=\"v5_motion_set_motor_velocity\" id=\"N)*hfH;_]%8?Ae5Fi5y[\"><field name=\"MOTOR\">MotorRight</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"CT$izi8kOk,)J,1{^OMi\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"v5_motion_spin\" id=\"pJVt4Try3gxAAj?%BOO.\"><field name=\"MOTOR\">MotorRight</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_motion_set_motor_velocity\" id=\"FQ7@Q2Q[c4Kn}:+cvFfQ\"><field name=\"MOTOR\">MotorLeft</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"@F0z7Y+OtGwpnw6Z+SrV\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"v5_motion_spin\" id=\"le_rz?-SaQj!E}8Tirwa\"><field name=\"MOTOR\">MotorLeft</field><field name=\"DIRECTION\">rev</field><next><block type=\"v5_control_wait\" id=\",Dxz;##0O@1w`yzzpg.9\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"7{7EEZB(]ok3Ny[Vhadf\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_motion_stop_motor\" id=\"+;m?zY-V$q*r{lN3tBSa\"><field name=\"MOTOR\">MotorLeft</field><next><block type=\"v5_motion_stop_motor\" id=\"{ddM2]I_L-_jk;/o4Uwl\"><field name=\"MOTOR\">MotorRight</field></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"v5_events_when_driver\" id=\"K3}j]7LrE0dexe0zzd*~\" x=\"490\" y=\"330\"><next><block type=\"v5_control_while\" id=\"Z/o~oo7-B!2C.oU!Udsw\"><value name=\"CONDITION\"><block type=\"v5_operator_greater_than\" id=\"CR|L{?H59r^F.r~*K%9H\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"Wrl#DSj},x,$,=Zy,=v2\"><field name=\"NUM\">51</field></shadow></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"DMhw$78OcRZHtS,PGwDh\"><field name=\"NUM\">50</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_control_if_then\" id=\".ZIWHC[T1m.+*LEUz,dc\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\"eA,moYko!QWmpG`dG0ls\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonUp</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\"N#MEuXOym_N2pD~c?S3e\"><field name=\"MOTOR\">MotorLeft</field><field name=\"DIRECTION\">rev</field></block></statement><next><block type=\"v5_control_if_then\" id=\":-x`!-Hp_6Rr]#M}m{K|\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\"w]=3vKmxbcg4f({k6zW}\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonDown</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\"{f7z70TWe}m(HTI)Eh7=\"><field name=\"MOTOR\">MotorLeft</field><field name=\"DIRECTION\">fwd</field></block></statement><next><block type=\"v5_control_if_then\" id=\"NvlaXQb3bh;n)}?ID??J\"><value name=\"CONDITION\"><block type=\"v5_operator_not\" id=\"?J-4?{Y:NzU{7VRC5*[~\"><value name=\"OPERAND\"><block type=\"v5_operator_and\" id=\"{6(E2BKx+2f7o8u(sTNU\"><value name=\"OPERAND1\"><block type=\"v5_sensing_pressing_controller\" id=\"m`2VT$bc!tC6v}u+}tO#\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonUp</field></block></value><value name=\"OPERAND2\"><block type=\"v5_sensing_pressing_controller\" id=\"[HEQE*~D7Xq_b^f@B]kp\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonDown</field></block></value></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_stop_motor\" id=\"+x5R*SE-=;s2u2/W[5)C\"><field name=\"MOTOR\">MotorLeft</field></block></statement><next><block type=\"v5_control_if_then\" id=\"8rnBw/WyuFs.?DrFIC/o\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\"`7d./r%,eZb:nq@AlI%!\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonX</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\"ym1)X1oX6DXr-xc-6iD)\"><field name=\"MOTOR\">MotorRight</field><field name=\"DIRECTION\">fwd</field></block></statement><next><block type=\"v5_control_if_then\" id=\"@IZ:%hG9o{p$%zg-`F5P\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\"IZ1%#`y7%/}8]*i,_`29\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonB</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\"aPX*Tr@,+5qDM7~oRVIM\"><field name=\"MOTOR\">MotorRight</field><field name=\"DIRECTION\">rev</field></block></statement><next><block type=\"v5_control_if_then\" id=\"E;Ky9-dNK[a]S;[i(}@3\"><value name=\"CONDITION\"><block type=\"v5_operator_not\" id=\"e{-2KlHO{/b/B$?tr#P@\"><value name=\"OPERAND\"><block type=\"v5_operator_and\" id=\"cX,sRmn::$hSI/#^,qD|\"><value name=\"OPERAND1\"><block type=\"v5_sensing_pressing_controller\" id=\"}d7!M,ui$UEo?eP5BLSI\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonX</field></block></value><value name=\"OPERAND2\"><block type=\"v5_sensing_pressing_controller\" id=\"c/6V7cpi*pifY2B)St^c\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonB</field></block></value></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_stop_motor\" id=\"CW0{6__[q(*q#o|#`?L+\"><field name=\"MOTOR\">MotorRight</field></block></statement></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block></xml>","rconfig":[{"port":[1],"name":"MotorRight","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[2],"name":"MotorLeft","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[13],"name":"MotorShoot","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[3],"name":"MotorPickup","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[7],"name":"MotorExtend1","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[8],"name":"MotorExtend2","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.0","minVersion":"2.4.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor MotorRight = motor(PORT1, ratio18_1, false);\n\nmotor MotorLeft = motor(PORT2, ratio18_1, false);\n\nmotor MotorShoot = motor(PORT13, ratio18_1, false);\n\nmotor MotorPickup = motor(PORT3, ratio18_1, false);\n\nmotor MotorExtend1 = motor(PORT7, ratio18_1, false);\n\nmotor MotorExtend2 = motor(PORT8, ratio18_1, false);\n\ncontroller Controller1 = controller(primary);\n\n\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\ncompetition Competition;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  MotorRight.setVelocity(50.0, percent);\n  MotorRight.spin(forward);\n  MotorLeft.setVelocity(50.0, percent);\n  MotorLeft.spin(reverse);\n  wait(1.0, seconds);\n  MotorLeft.stop();\n  MotorRight.stop();\n  return 0;\n}\n\n// \"when driver control\" hat block\nint ondriver_drivercontrol_0() {\n  while ((51.0 > 50.0)) {\n    if (Controller1.ButtonUp.pressing()) {\n      MotorLeft.spin(reverse);\n    }\n    if (Controller1.ButtonDown.pressing()) {\n      MotorLeft.spin(forward);\n    }\n    if (!(Controller1.ButtonUp.pressing() && Controller1.ButtonDown.pressing())) {\n      MotorLeft.stop();\n    }\n    if (Controller1.ButtonX.pressing()) {\n      MotorRight.spin(forward);\n    }\n    if (Controller1.ButtonB.pressing()) {\n      MotorRight.spin(reverse);\n    }\n    if (!(Controller1.ButtonX.pressing() && Controller1.ButtonB.pressing())) {\n      MotorRight.stop();\n    }\n  wait(5, msec);\n  }\n  return 0;\n}\n\nvoid VEXcode_driver_task() {\n  // Start the driver control tasks....\n  vex::task drive0(ondriver_drivercontrol_0);\n  while(Competition.isDriverControl() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n  drive0.stop();\n  return;\n}\n\nvoid VEXcode_auton_task() {\n  // Start the auton control tasks....\n\n  while(Competition.isAutonomous() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n\n  return;\n}\n\n\n\nint main() {\n  vex::competition::bStopTasksBetweenModes = false;\n  Competition.autonomous(VEXcode_auton_task);\n  Competition.drivercontrol(VEXcode_driver_task);\n\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}